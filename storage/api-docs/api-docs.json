{
    "openapi": "3.0.0",
    "info": {
        "title": "WDTP API",
        "description": "What Do They Pay? - A wage transparency platform for hourly workers",
        "contact": {
            "name": "WDTP API Support",
            "url": "https://wdtp.app",
            "email": "support@wdtp.app"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://my-default-host.com",
            "description": "WDTP API Server"
        }
    ],
    "paths": {
        "/api/v1": {},
        "/api/v1/industries": {
            "get": {
                "tags": [
                    "Industries"
                ],
                "summary": "List industries",
                "description": "Get industries as nested tree or flat paginated list with optional search",
                "operationId": "74cd47647748f296d06d79315617c2e1",
                "parameters": [
                    {
                        "name": "tree",
                        "in": "query",
                        "description": "Return nested tree structure instead of flat list",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search term for industry name or slug (case-insensitive)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "minLength": 2,
                            "example": "restaurant"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page for flat list (ignored for tree view)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 25,
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Industries retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "oneOf": [
                                                    {
                                                        "$ref": "#/components/schemas/Industry"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/IndustryNode"
                                                    }
                                                ]
                                            }
                                        },
                                        "links": {
                                            "description": "Pagination links (only for flat list)",
                                            "type": "object"
                                        },
                                        "meta": {
                                            "description": "Pagination metadata (only for flat list)",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/v1/industries/autocomplete": {
            "get": {
                "tags": [
                    "Industries"
                ],
                "summary": "Industry autocomplete search",
                "description": "Fast search for industries with minimal response payload",
                "operationId": "004064da9d311574a3aa90d3e26b832f",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search term (minimum 2 characters)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "minLength": 2,
                            "example": "food"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Maximum number of results",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "maximum": 50,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Autocomplete results",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 2
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Fast Food Restaurant"
                                            },
                                            "slug": {
                                                "type": "string",
                                                "example": "fast-food-restaurant"
                                            },
                                            "breadcrumbs_text": {
                                                "type": "string",
                                                "example": "Restaurants > Fast Food Restaurant"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error - missing or invalid parameters"
                    }
                }
            }
        },
        "/api/v1/industries/{idOrSlug}": {
            "get": {
                "tags": [
                    "Industries"
                ],
                "summary": "Get single industry",
                "description": "Retrieve a specific industry by ID or slug with relationships",
                "operationId": "5df7234ba92a76c69e4a63b56a60a7a2",
                "parameters": [
                    {
                        "name": "idOrSlug",
                        "in": "path",
                        "description": "Industry ID (integer) or slug (string)",
                        "required": true,
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "integer",
                                    "example": 1
                                },
                                {
                                    "type": "string",
                                    "example": "fast-food-restaurant"
                                }
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Industry retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Industry"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Industry not found"
                    }
                }
            }
        },
        "/api/v1/organizations": {
            "get": {
                "tags": [
                    "Organizations"
                ],
                "summary": "List organizations",
                "description": "Get paginated list of organizations with search, filtering and sorting",
                "operationId": "54ffd98fe34a49c738c616139213bf8a",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search term for organization name, legal name or domain (case-insensitive)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "minLength": 2,
                            "example": "starbucks"
                        }
                    },
                    {
                        "name": "industry_id",
                        "in": "query",
                        "description": "Filter by primary industry ID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    },
                    {
                        "name": "industry_slug",
                        "in": "query",
                        "description": "Filter by primary industry slug",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "coffee-shop"
                        }
                    },
                    {
                        "name": "verified",
                        "in": "query",
                        "description": "Filter by verification status",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "example": true
                        }
                    },
                    {
                        "name": "has_locations",
                        "in": "query",
                        "description": "Filter organizations that have locations",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "example": true
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 25,
                            "maximum": 100,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort order (relevance only works with search)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "name",
                            "enum": [
                                "relevance",
                                "name",
                                "locations",
                                "wage_reports",
                                "updated"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Organizations retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/OrganizationListItem"
                                            }
                                        },
                                        "links": {
                                            "description": "Pagination links",
                                            "type": "object"
                                        },
                                        "meta": {
                                            "description": "Pagination metadata",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/v1/organizations/{idOrSlug}": {
            "get": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Get single organization",
                "description": "Retrieve a specific organization by ID or slug with full details",
                "operationId": "e65d0e167fab6f8d7fdee903fbf210a6",
                "parameters": [
                    {
                        "name": "idOrSlug",
                        "in": "path",
                        "description": "Organization ID (integer) or slug (string)",
                        "required": true,
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "integer",
                                    "example": 1
                                },
                                {
                                    "type": "string",
                                    "example": "starbucks"
                                }
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Organization retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Organization"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Organization not found"
                    }
                }
            }
        },
        "/api/v1/organizations/autocomplete": {
            "get": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Organization autocomplete search",
                "description": "Fast autocomplete endpoint for organization search with minimal response format",
                "operationId": "16f0a0d5a688e745a2beb3766fff89d4",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search query (minimum 2 characters)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "minLength": 2,
                            "example": "starb"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Maximum number of results (default 10, max 50)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "maximum": 50,
                            "minimum": 1,
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Autocomplete suggestions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Starbucks"
                                            },
                                            "slug": {
                                                "type": "string",
                                                "example": "starbucks"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/v1/position-categories": {
            "get": {
                "tags": [
                    "Position Categories"
                ],
                "summary": "List position categories",
                "description": "Get position categories with optional industry filtering and search",
                "operationId": "b1e11dc8373be207a854bf4d2b658bcd",
                "parameters": [
                    {
                        "name": "industry",
                        "in": "query",
                        "description": "Filter by industry ID or slug",
                        "required": false,
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "integer",
                                    "example": 1
                                },
                                {
                                    "type": "string",
                                    "example": "restaurants"
                                }
                            ]
                        }
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search term for position name or description (case-insensitive)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "minLength": 2,
                            "example": "server"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status (defaults to active only)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "active",
                            "enum": [
                                "active",
                                "inactive",
                                "all"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 25,
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Position categories retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PositionCategory"
                                            }
                                        },
                                        "links": {
                                            "description": "Pagination links",
                                            "type": "object"
                                        },
                                        "meta": {
                                            "description": "Pagination metadata",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/v1/position-categories/autocomplete": {
            "get": {
                "tags": [
                    "Position Categories"
                ],
                "summary": "Position category autocomplete search",
                "description": "Fast search for position categories with minimal response payload",
                "operationId": "366e21ab1f5dbeba297cb7133f9cc6d4",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search term (minimum 2 characters)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "minLength": 2,
                            "example": "server"
                        }
                    },
                    {
                        "name": "industry",
                        "in": "query",
                        "description": "Filter by industry ID or slug",
                        "required": false,
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "integer",
                                    "example": 1
                                },
                                {
                                    "type": "string",
                                    "example": "restaurants"
                                }
                            ]
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Maximum number of results",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "maximum": 50,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Autocomplete results",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 2
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Server"
                                            },
                                            "slug": {
                                                "type": "string",
                                                "example": "server-restaurants"
                                            },
                                            "industry_name": {
                                                "type": "string",
                                                "example": "Restaurants"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error - missing or invalid parameters"
                    }
                }
            }
        },
        "/api/v1/position-categories/{idOrSlug}": {
            "get": {
                "tags": [
                    "Position Categories"
                ],
                "summary": "Get single position category",
                "description": "Retrieve a specific position category by ID or slug with relationships",
                "operationId": "e27621f8d4a287d7e1f8157a8dccb5b9",
                "parameters": [
                    {
                        "name": "idOrSlug",
                        "in": "path",
                        "description": "Position Category ID (integer) or slug (string)",
                        "required": true,
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "integer",
                                    "example": 1
                                },
                                {
                                    "type": "string",
                                    "example": "server-restaurants"
                                }
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Position category retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/PositionCategory"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Position category not found"
                    }
                }
            }
        },
        "/api/v1/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user account",
                "description": "Creates a new user account and returns authentication token",
                "operationId": "48e49e48019e8b141753cb515a26100b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "username",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "User's full name",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "description": "User's email address",
                                        "type": "string",
                                        "format": "email",
                                        "maxLength": 255,
                                        "example": "john.doe@example.com"
                                    },
                                    "username": {
                                        "description": "Unique username",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "johndoe"
                                    },
                                    "password": {
                                        "description": "User's password (minimum 8 characters)",
                                        "type": "string",
                                        "minLength": 8,
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "description": "Password confirmation",
                                        "type": "string",
                                        "example": "password123"
                                    },
                                    "phone": {
                                        "description": "User's phone number (optional)",
                                        "type": "string",
                                        "maxLength": 20,
                                        "example": "+1-555-123-4567"
                                    },
                                    "birthday": {
                                        "description": "User's birthday (optional)",
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-01-15"
                                    },
                                    "city": {
                                        "description": "User's city (optional)",
                                        "type": "string",
                                        "maxLength": 100,
                                        "example": "New York"
                                    },
                                    "state": {
                                        "description": "User's state (optional)",
                                        "type": "string",
                                        "maxLength": 100,
                                        "example": "NY"
                                    },
                                    "country": {
                                        "description": "User's country (optional)",
                                        "type": "string",
                                        "maxLength": 100,
                                        "example": "United States"
                                    },
                                    "zipcode": {
                                        "description": "User's zipcode (optional)",
                                        "type": "string",
                                        "maxLength": 20,
                                        "example": "10001"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "john.doe@example.com"
                                                        },
                                                        "username": {
                                                            "type": "string",
                                                            "example": "johndoe"
                                                        },
                                                        "role": {
                                                            "type": "string",
                                                            "enum": [
                                                                "admin",
                                                                "moderator",
                                                                "contributor",
                                                                "viewer"
                                                            ],
                                                            "example": "viewer"
                                                        },
                                                        "enabled": {
                                                            "type": "boolean",
                                                            "example": true
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "token": {
                                                    "type": "string",
                                                    "example": "1|abcdef123456789..."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email has already been taken."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Authenticate user and get access token",
                "description": "Validates user credentials and returns authentication token",
                "operationId": "5db09a35f965c6ca7529ed3c3cae8e21",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "User's email address",
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "description": "User's password",
                                        "type": "string",
                                        "example": "password123"
                                    },
                                    "device_name": {
                                        "description": "Device name for token identification (optional)",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "iPhone App"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "john.doe@example.com"
                                                        },
                                                        "username": {
                                                            "type": "string",
                                                            "example": "johndoe"
                                                        },
                                                        "role": {
                                                            "type": "string",
                                                            "enum": [
                                                                "admin",
                                                                "moderator",
                                                                "contributor",
                                                                "viewer"
                                                            ],
                                                            "example": "viewer"
                                                        },
                                                        "enabled": {
                                                            "type": "boolean",
                                                            "example": true
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "token": {
                                                    "type": "string",
                                                    "example": "1|abcdef123456789..."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Authentication failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The provided credentials are incorrect."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout and revoke access token",
                "description": "Revokes the current user's authentication token",
                "operationId": "8f1a443d39c3bf383f851fbb51253c64",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/auth/me": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get current user profile",
                "description": "Returns the authenticated user's profile information",
                "operationId": "1e5f382ba4fa0960d233875cab75a361",
                "responses": {
                    "200": {
                        "description": "User profile retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "john.doe@example.com"
                                                        },
                                                        "username": {
                                                            "type": "string",
                                                            "example": "johndoe"
                                                        },
                                                        "role": {
                                                            "type": "string",
                                                            "enum": [
                                                                "admin",
                                                                "moderator",
                                                                "contributor",
                                                                "viewer"
                                                            ],
                                                            "example": "viewer"
                                                        },
                                                        "enabled": {
                                                            "type": "boolean",
                                                            "example": true
                                                        },
                                                        "phone": {
                                                            "type": "string",
                                                            "example": "+1-555-123-4567",
                                                            "nullable": true
                                                        },
                                                        "birthday": {
                                                            "type": "string",
                                                            "format": "date",
                                                            "example": "1990-01-15",
                                                            "nullable": true
                                                        },
                                                        "city": {
                                                            "type": "string",
                                                            "example": "New York",
                                                            "nullable": true
                                                        },
                                                        "state": {
                                                            "type": "string",
                                                            "example": "NY",
                                                            "nullable": true
                                                        },
                                                        "country": {
                                                            "type": "string",
                                                            "example": "United States",
                                                            "nullable": true
                                                        },
                                                        "zipcode": {
                                                            "type": "string",
                                                            "example": "10001",
                                                            "nullable": true
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2024-01-15T10:30:00Z"
                                                        },
                                                        "updated_at": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2024-01-15T10:30:00Z"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/healthz": {
            "get": {
                "tags": [
                    "Health"
                ],
                "summary": "Basic health check",
                "description": "Returns basic API status",
                "operationId": "5866c56c5e94c9fa6af984def563c23d",
                "responses": {
                    "200": {
                        "description": "API is healthy",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/healthz/deep": {
            "get": {
                "tags": [
                    "Health"
                ],
                "summary": "Deep health check with database connectivity",
                "description": "Returns API status including database and PostGIS connectivity",
                "operationId": "e177f377b82d242425dcbc488109210f",
                "responses": {
                    "200": {
                        "description": "API and dependencies are healthy",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "database": {
                                            "type": "string",
                                            "example": "connected"
                                        },
                                        "postgis": {
                                            "type": "string",
                                            "example": "3.5 USE_GEOS=1 USE_PROJ=1 USE_STATS=1"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Health check failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Database connection failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Industry": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 120,
                        "example": "Fast Food Restaurant"
                    },
                    "slug": {
                        "type": "string",
                        "example": "fast-food-restaurant"
                    },
                    "depth": {
                        "type": "integer",
                        "maximum": 6,
                        "minimum": 0,
                        "example": 1
                    },
                    "sort": {
                        "type": "integer",
                        "example": 10
                    },
                    "parent": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 1
                            },
                            "name": {
                                "type": "string",
                                "example": "Restaurants"
                            },
                            "slug": {
                                "type": "string",
                                "example": "restaurants"
                            }
                        },
                        "type": "object",
                        "nullable": true
                    },
                    "breadcrumbs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Breadcrumb"
                        }
                    },
                    "children_count": {
                        "type": "integer",
                        "example": 3
                    }
                },
                "type": "object"
            },
            "IndustryNode": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Industry"
                    },
                    {
                        "properties": {
                            "children": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/IndustryNode"
                                }
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "Breadcrumb": {
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Restaurants"
                    },
                    "slug": {
                        "type": "string",
                        "example": "restaurants"
                    }
                },
                "type": "object"
            },
            "Organization": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 120,
                        "example": "Starbucks"
                    },
                    "slug": {
                        "type": "string",
                        "example": "starbucks"
                    },
                    "legal_name": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Starbucks Corporation"
                    },
                    "domain": {
                        "type": "string",
                        "example": "starbucks.com"
                    },
                    "website_url": {
                        "type": "string",
                        "format": "url",
                        "example": "https://starbucks.com"
                    },
                    "description": {
                        "type": "string",
                        "example": "Global coffee chain",
                        "nullable": true
                    },
                    "logo_url": {
                        "type": "string",
                        "format": "url",
                        "example": "https://example.com/logo.png",
                        "nullable": true
                    },
                    "primary_industry": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 5
                            },
                            "name": {
                                "type": "string",
                                "example": "Coffee Shop"
                            },
                            "slug": {
                                "type": "string",
                                "example": "coffee-shop"
                            }
                        },
                        "type": "object",
                        "nullable": true
                    },
                    "locations_count": {
                        "type": "integer",
                        "example": 8450
                    },
                    "wage_reports_count": {
                        "type": "integer",
                        "example": 2341
                    },
                    "is_verified": {
                        "type": "boolean",
                        "example": true
                    },
                    "verified_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-15T10:30:00Z",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-12-01T08:15:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-15T10:30:00Z"
                    }
                },
                "type": "object"
            },
            "OrganizationListItem": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Starbucks"
                    },
                    "slug": {
                        "type": "string",
                        "example": "starbucks"
                    },
                    "domain": {
                        "type": "string",
                        "example": "starbucks.com"
                    },
                    "primary_industry": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 5
                            },
                            "name": {
                                "type": "string",
                                "example": "Coffee Shop"
                            },
                            "slug": {
                                "type": "string",
                                "example": "coffee-shop"
                            }
                        },
                        "type": "object",
                        "nullable": true
                    },
                    "locations_count": {
                        "type": "integer",
                        "example": 8450
                    },
                    "wage_reports_count": {
                        "type": "integer",
                        "example": 2341
                    },
                    "is_verified": {
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            },
            "PositionCategory": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 120,
                        "example": "Server"
                    },
                    "slug": {
                        "type": "string",
                        "example": "server-restaurants"
                    },
                    "description": {
                        "type": "string",
                        "example": "Takes customer orders, serves food and beverages",
                        "nullable": true
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "active",
                            "inactive"
                        ],
                        "example": "active"
                    },
                    "industry": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 1
                            },
                            "name": {
                                "type": "string",
                                "example": "Restaurants"
                            },
                            "slug": {
                                "type": "string",
                                "example": "restaurants"
                            }
                        },
                        "type": "object"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "description": "User model",
                "properties": {
                    "id": {
                        "description": "User ID",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "description": "User's full name",
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "description": "User's email address",
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@example.com"
                    },
                    "username": {
                        "description": "User's username",
                        "type": "string",
                        "example": "johndoe"
                    },
                    "role": {
                        "description": "User role",
                        "type": "string",
                        "enum": [
                            "admin",
                            "moderator",
                            "contributor",
                            "viewer"
                        ],
                        "example": "viewer"
                    },
                    "enabled": {
                        "description": "Whether the user account is enabled",
                        "type": "boolean",
                        "example": true
                    },
                    "phone": {
                        "description": "User's phone number",
                        "type": "string",
                        "example": "+1-555-123-4567",
                        "nullable": true
                    },
                    "birthday": {
                        "description": "User's birthday",
                        "type": "string",
                        "format": "date",
                        "example": "1990-01-15",
                        "nullable": true
                    },
                    "city": {
                        "description": "User's city",
                        "type": "string",
                        "example": "New York",
                        "nullable": true
                    },
                    "state": {
                        "description": "User's state",
                        "type": "string",
                        "example": "NY",
                        "nullable": true
                    },
                    "country": {
                        "description": "User's country",
                        "type": "string",
                        "example": "United States",
                        "nullable": true
                    },
                    "zipcode": {
                        "description": "User's zipcode",
                        "type": "string",
                        "example": "10001",
                        "nullable": true
                    },
                    "created_at": {
                        "description": "Account creation timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-15T10:30:00Z"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-15T10:30:00Z"
                    }
                },
                "type": "object"
            },
            "UserPublic": {
                "title": "User (Public)",
                "description": "User model for public responses (excludes sensitive fields)",
                "properties": {
                    "id": {
                        "description": "User ID",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "description": "User's full name",
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "description": "User's email address",
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@example.com"
                    },
                    "username": {
                        "description": "User's username",
                        "type": "string",
                        "example": "johndoe"
                    },
                    "role": {
                        "description": "User role",
                        "type": "string",
                        "enum": [
                            "admin",
                            "moderator",
                            "contributor",
                            "viewer"
                        ],
                        "example": "viewer"
                    },
                    "enabled": {
                        "description": "Whether the user account is enabled",
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            },
            "AuthResponse": {
                "title": "Authentication Response",
                "description": "Authentication response with user data and token",
                "properties": {
                    "message": {
                        "description": "Response message",
                        "type": "string",
                        "example": "Login successful"
                    },
                    "data": {
                        "properties": {
                            "user": {
                                "$ref": "#/components/schemas/UserPublic"
                            },
                            "token": {
                                "description": "Authentication token",
                                "type": "string",
                                "example": "1|abcdef123456789..."
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ValidationError": {
                "title": "Validation Error",
                "description": "Standard validation error response",
                "properties": {
                    "message": {
                        "description": "Error message",
                        "type": "string",
                        "example": "The given data was invalid."
                    },
                    "errors": {
                        "description": "Field-specific validation errors",
                        "type": "object",
                        "example": {
                            "email": [
                                "The email has already been taken."
                            ]
                        },
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "property": null
                        }
                    }
                },
                "type": "object"
            },
            "ErrorResponse": {
                "title": "Error Response",
                "description": "Standard error response",
                "properties": {
                    "message": {
                        "description": "Error message",
                        "type": "string",
                        "example": "Unauthenticated."
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "apiKey",
                "description": "Enter token in format: Bearer {token}",
                "name": "Authorization",
                "in": "header"
            },
            "0": []
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "User authentication and authorization endpoints"
        },
        {
            "name": "Health",
            "description": "API health check endpoints"
        },
        {
            "name": "Industries",
            "description": "Industries"
        },
        {
            "name": "Organizations",
            "description": "Organizations"
        },
        {
            "name": "Position Categories",
            "description": "Position Categories"
        }
    ]
}