{
    "openapi": "3.0.0",
    "info": {
        "title": "WDTP API",
        "description": "What Do They Pay? - A wage transparency platform for hourly workers",
        "contact": {
            "name": "WDTP API Support",
            "url": "https://wdtp.app",
            "email": "support@wdtp.app"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://my-default-host.com",
            "description": "WDTP API Server"
        }
    ],
    "paths": {
        "/api/v1": {},
        "/api/v1/industries": {
            "get": {
                "tags": [
                    "Industries"
                ],
                "summary": "List industries",
                "description": "Get industries as nested tree or flat paginated list with optional search",
                "operationId": "74cd47647748f296d06d79315617c2e1",
                "parameters": [
                    {
                        "name": "tree",
                        "in": "query",
                        "description": "Return nested tree structure instead of flat list",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search term for industry name or slug (case-insensitive)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "minLength": 2,
                            "example": "restaurant"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page for flat list (ignored for tree view)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 25,
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Industries retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "oneOf": [
                                                    {
                                                        "$ref": "#/components/schemas/Industry"
                                                    },
                                                    {
                                                        "$ref": "#/components/schemas/IndustryNode"
                                                    }
                                                ]
                                            }
                                        },
                                        "links": {
                                            "description": "Pagination links (only for flat list)",
                                            "type": "object"
                                        },
                                        "meta": {
                                            "description": "Pagination metadata (only for flat list)",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/v1/industries/autocomplete": {
            "get": {
                "tags": [
                    "Industries"
                ],
                "summary": "Industry autocomplete search",
                "description": "Fast search for industries with minimal response payload",
                "operationId": "004064da9d311574a3aa90d3e26b832f",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search term (minimum 2 characters)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "minLength": 2,
                            "example": "food"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Maximum number of results",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "maximum": 50,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Autocomplete results",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 2
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Fast Food Restaurant"
                                            },
                                            "slug": {
                                                "type": "string",
                                                "example": "fast-food-restaurant"
                                            },
                                            "breadcrumbs_text": {
                                                "type": "string",
                                                "example": "Restaurants > Fast Food Restaurant"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error - missing or invalid parameters"
                    }
                }
            }
        },
        "/api/v1/industries/{idOrSlug}": {
            "get": {
                "tags": [
                    "Industries"
                ],
                "summary": "Get single industry",
                "description": "Retrieve a specific industry by ID or slug with relationships",
                "operationId": "5df7234ba92a76c69e4a63b56a60a7a2",
                "parameters": [
                    {
                        "name": "idOrSlug",
                        "in": "path",
                        "description": "Industry ID (integer) or slug (string)",
                        "required": true,
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "integer",
                                    "example": 1
                                },
                                {
                                    "type": "string",
                                    "example": "fast-food-restaurant"
                                }
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Industry retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Industry"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Industry not found"
                    }
                }
            }
        },
        "/api/v1/locations": {
            "get": {
                "tags": [
                    "Locations"
                ],
                "summary": "List locations with spatial search",
                "description": "Get paginated list of locations with optional spatial filtering",
                "operationId": "49873ce3b7837cc865db7849ec7cccda",
                "parameters": [
                    {
                        "name": "near",
                        "in": "query",
                        "description": "Coordinates in format 'latitude,longitude' for spatial search",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "40.7128,-74.0060"
                        }
                    },
                    {
                        "name": "radius_km",
                        "in": "query",
                        "description": "Search radius in kilometers (0.1-50km, default: 10)",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "default": 10,
                            "maximum": 50,
                            "minimum": 0.1
                        }
                    },
                    {
                        "name": "organization_id",
                        "in": "query",
                        "description": "Filter by organization ID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Results per page (1-100, default: 20)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 20,
                            "maximum": 100,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated list of locations",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Location"
                                            }
                                        },
                                        "links": {
                                            "description": "Pagination links",
                                            "type": "object"
                                        },
                                        "meta": {
                                            "description": "Pagination metadata",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/v1/locations/{locationId}/wage-stats": {
            "get": {
                "tags": [
                    "Locations"
                ],
                "summary": "Get wage statistics for location",
                "description": "Retrieve wage statistics for a specific location",
                "operationId": "aaa40a8b26582121a12644f2e107e578",
                "parameters": [
                    {
                        "name": "locationId",
                        "in": "path",
                        "description": "Location ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Location wage statistics",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/WageStatistics"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Location not found"
                    },
                    "422": {
                        "description": "No wage data available for this location"
                    }
                }
            }
        },
        "/api/v1/organizations": {
            "get": {
                "tags": [
                    "Organizations"
                ],
                "summary": "List organizations",
                "description": "Get paginated list of organizations with search, filtering and sorting",
                "operationId": "54ffd98fe34a49c738c616139213bf8a",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search term for organization name, legal name or domain (case-insensitive)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "minLength": 2,
                            "example": "starbucks"
                        }
                    },
                    {
                        "name": "industry_id",
                        "in": "query",
                        "description": "Filter by primary industry ID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    },
                    {
                        "name": "industry_slug",
                        "in": "query",
                        "description": "Filter by primary industry slug",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "coffee-shop"
                        }
                    },
                    {
                        "name": "verified",
                        "in": "query",
                        "description": "Filter by verification status",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "example": true
                        }
                    },
                    {
                        "name": "has_locations",
                        "in": "query",
                        "description": "Filter organizations that have locations",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "example": true
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 25,
                            "maximum": 100,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort order (relevance only works with search)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "name",
                            "enum": [
                                "relevance",
                                "name",
                                "locations",
                                "wage_reports",
                                "updated"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Organizations retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/OrganizationListItem"
                                            }
                                        },
                                        "links": {
                                            "description": "Pagination links",
                                            "type": "object"
                                        },
                                        "meta": {
                                            "description": "Pagination metadata",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/v1/organizations/{idOrSlug}": {
            "get": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Get single organization",
                "description": "Retrieve a specific organization by ID or slug with full details",
                "operationId": "e65d0e167fab6f8d7fdee903fbf210a6",
                "parameters": [
                    {
                        "name": "idOrSlug",
                        "in": "path",
                        "description": "Organization ID (integer) or slug (string)",
                        "required": true,
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "integer",
                                    "example": 1
                                },
                                {
                                    "type": "string",
                                    "example": "starbucks"
                                }
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Organization retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Organization"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Organization not found"
                    }
                }
            }
        },
        "/api/v1/organizations/{idOrSlug}/wage-stats": {
            "get": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Get wage statistics for organization",
                "description": "Retrieve wage statistics across all locations for a specific organization",
                "operationId": "1a466890359c8f4f3a3503ce92860d4e",
                "parameters": [
                    {
                        "name": "idOrSlug",
                        "in": "path",
                        "description": "Organization ID (integer) or slug (string)",
                        "required": true,
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "integer",
                                    "example": 1
                                },
                                {
                                    "type": "string",
                                    "example": "starbucks"
                                }
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Organization wage statistics",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/WageStatistics"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Organization not found"
                    },
                    "422": {
                        "description": "No wage data available for this organization"
                    }
                }
            }
        },
        "/api/v1/organizations/autocomplete": {
            "get": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Organization autocomplete search",
                "description": "Fast autocomplete endpoint for organization search with minimal response format",
                "operationId": "16f0a0d5a688e745a2beb3766fff89d4",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search query (minimum 2 characters)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "minLength": 2,
                            "example": "starb"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Maximum number of results (default 10, max 50)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "maximum": 50,
                            "minimum": 1,
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Autocomplete suggestions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Starbucks"
                                            },
                                            "slug": {
                                                "type": "string",
                                                "example": "starbucks"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/v1/position-categories": {
            "get": {
                "tags": [
                    "Position Categories"
                ],
                "summary": "List position categories",
                "description": "Get position categories with optional industry filtering and search",
                "operationId": "b1e11dc8373be207a854bf4d2b658bcd",
                "parameters": [
                    {
                        "name": "industry",
                        "in": "query",
                        "description": "Filter by industry ID or slug",
                        "required": false,
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "integer",
                                    "example": 1
                                },
                                {
                                    "type": "string",
                                    "example": "restaurants"
                                }
                            ]
                        }
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search term for position name or description (case-insensitive)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "minLength": 2,
                            "example": "server"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status (defaults to active only)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "active",
                            "enum": [
                                "active",
                                "inactive",
                                "all"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 25,
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Position categories retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PositionCategory"
                                            }
                                        },
                                        "links": {
                                            "description": "Pagination links",
                                            "type": "object"
                                        },
                                        "meta": {
                                            "description": "Pagination metadata",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/v1/position-categories/autocomplete": {
            "get": {
                "tags": [
                    "Position Categories"
                ],
                "summary": "Position category autocomplete search",
                "description": "Fast search for position categories with minimal response payload",
                "operationId": "366e21ab1f5dbeba297cb7133f9cc6d4",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search term (minimum 2 characters)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "minLength": 2,
                            "example": "server"
                        }
                    },
                    {
                        "name": "industry",
                        "in": "query",
                        "description": "Filter by industry ID or slug",
                        "required": false,
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "integer",
                                    "example": 1
                                },
                                {
                                    "type": "string",
                                    "example": "restaurants"
                                }
                            ]
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Maximum number of results",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "maximum": 50,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Autocomplete results",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 2
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Server"
                                            },
                                            "slug": {
                                                "type": "string",
                                                "example": "server-restaurants"
                                            },
                                            "industry_name": {
                                                "type": "string",
                                                "example": "Restaurants"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error - missing or invalid parameters"
                    }
                }
            }
        },
        "/api/v1/position-categories/{idOrSlug}": {
            "get": {
                "tags": [
                    "Position Categories"
                ],
                "summary": "Get single position category",
                "description": "Retrieve a specific position category by ID or slug with relationships",
                "operationId": "e27621f8d4a287d7e1f8157a8dccb5b9",
                "parameters": [
                    {
                        "name": "idOrSlug",
                        "in": "path",
                        "description": "Position Category ID (integer) or slug (string)",
                        "required": true,
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "integer",
                                    "example": 1
                                },
                                {
                                    "type": "string",
                                    "example": "server-restaurants"
                                }
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Position category retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/PositionCategory"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Position category not found"
                    }
                }
            }
        },
        "/api/v1/wage-reports": {
            "get": {
                "tags": [
                    "Wage Reports"
                ],
                "summary": "List wage reports with filtering and pagination",
                "operationId": "c3a9ba5b46ba52d9a8e51ce177ccbea2",
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "query",
                        "description": "Filter by organization ID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "organization_slug",
                        "in": "query",
                        "description": "Filter by organization slug",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "starbucks"
                        }
                    },
                    {
                        "name": "location_id",
                        "in": "query",
                        "description": "Filter by location ID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "job_title",
                        "in": "query",
                        "description": "ILIKE search on job title",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Barista"
                        }
                    },
                    {
                        "name": "min_hr",
                        "in": "query",
                        "description": "Minimum hourly wage in dollars",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "example": 15
                        }
                    },
                    {
                        "name": "max_hr",
                        "in": "query",
                        "description": "Maximum hourly wage in dollars",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "example": 25
                        }
                    },
                    {
                        "name": "since",
                        "in": "query",
                        "description": "Effective date filter (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2024-01-01"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "approved",
                            "enum": [
                                "approved",
                                "pending",
                                "rejected"
                            ]
                        }
                    },
                    {
                        "name": "employment_type",
                        "in": "query",
                        "description": "Filter by employment type",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "full_time",
                                "part_time",
                                "seasonal",
                                "contract"
                            ]
                        }
                    },
                    {
                        "name": "currency",
                        "in": "query",
                        "description": "Currency code filter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "USD",
                            "example": "USD"
                        }
                    },
                    {
                        "name": "near",
                        "in": "query",
                        "description": "Latitude,longitude for spatial search",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "40.7128,-74.0060"
                        }
                    },
                    {
                        "name": "radius_km",
                        "in": "query",
                        "description": "Search radius in kilometers (requires near parameter)",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "default": 10,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort order",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "recent",
                            "enum": [
                                "recent",
                                "oldest",
                                "highest",
                                "lowest",
                                "closest"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 25,
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated list of wage reports",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/WageReport"
                                            }
                                        },
                                        "links": {
                                            "description": "Pagination links",
                                            "type": "object"
                                        },
                                        "meta": {
                                            "description": "Pagination metadata",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Wage Reports"
                ],
                "summary": "Submit a new wage report",
                "operationId": "33eb2651c3d41b09856c7c8cfab77c8f",
                "requestBody": {
                    "description": "Wage report submission data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "location_id",
                                    "position_category_id",
                                    "wage_amount",
                                    "wage_type",
                                    "employment_type"
                                ],
                                "properties": {
                                    "location_id": {
                                        "description": "ID of the location where work is performed",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "position_category_id": {
                                        "description": "ID of the position category/job type",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "wage_amount": {
                                        "description": "Wage amount in dollars",
                                        "type": "number",
                                        "format": "float",
                                        "maximum": 999999.99,
                                        "minimum": 1,
                                        "example": 15.5
                                    },
                                    "wage_type": {
                                        "description": "Wage payment period",
                                        "type": "string",
                                        "enum": [
                                            "hourly",
                                            "weekly",
                                            "biweekly",
                                            "monthly",
                                            "yearly",
                                            "per_shift"
                                        ],
                                        "example": "hourly"
                                    },
                                    "employment_type": {
                                        "description": "Type of employment arrangement",
                                        "type": "string",
                                        "enum": [
                                            "full_time",
                                            "part_time",
                                            "contract",
                                            "seasonal"
                                        ],
                                        "example": "part_time"
                                    },
                                    "years_experience": {
                                        "description": "Years of experience in this role (optional)",
                                        "type": "integer",
                                        "maximum": 50,
                                        "minimum": 0,
                                        "example": 2,
                                        "nullable": true
                                    },
                                    "hours_per_week": {
                                        "description": "Average hours worked per week (optional)",
                                        "type": "integer",
                                        "maximum": 168,
                                        "minimum": 1,
                                        "example": 30,
                                        "nullable": true
                                    },
                                    "effective_date": {
                                        "description": "Date when this wage became effective (optional, defaults to today)",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-08-01",
                                        "nullable": true
                                    },
                                    "tips_included": {
                                        "description": "Whether tips are included in the wage amount (optional)",
                                        "type": "boolean",
                                        "example": false,
                                        "nullable": true
                                    },
                                    "unionized": {
                                        "description": "Whether the position is unionized (optional)",
                                        "type": "boolean",
                                        "example": true,
                                        "nullable": true
                                    },
                                    "additional_notes": {
                                        "description": "Additional notes or context about the wage (optional)",
                                        "type": "string",
                                        "maxLength": 1000,
                                        "example": "Includes health benefits and 401k matching",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Wage report created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/WageReport"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Wage report submitted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "wage_amount": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The wage amount is required."
                                                    }
                                                },
                                                "location_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The selected location does not exist."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error during submission"
                    }
                }
            }
        },
        "/api/v1/wage-reports/{wageReportId}": {
            "get": {
                "tags": [
                    "Wage Reports"
                ],
                "summary": "Show single wage report",
                "operationId": "906b55971037fa6828a6bdd503fca05d",
                "parameters": [
                    {
                        "name": "wageReportId",
                        "in": "path",
                        "description": "Wage report ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Wage report details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/WageReport"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Wage report not found"
                    }
                }
            }
        },
        "/api/v1/wage-reports/stats": {
            "get": {
                "tags": [
                    "Wage Reports"
                ],
                "summary": "Get global wage statistics",
                "description": "Retrieve comprehensive wage statistics with optional filtering",
                "operationId": "6bb1c143770e089513cef4c2f64cf729",
                "parameters": [
                    {
                        "name": "date_from",
                        "in": "query",
                        "description": "Filter by effective date from (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2024-01-01"
                        }
                    },
                    {
                        "name": "date_to",
                        "in": "query",
                        "description": "Filter by effective date to (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2024-12-31"
                        }
                    },
                    {
                        "name": "employment_type",
                        "in": "query",
                        "description": "Filter by employment type",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "full_time",
                                "part_time",
                                "seasonal",
                                "contract"
                            ]
                        }
                    },
                    {
                        "name": "position_category_id",
                        "in": "query",
                        "description": "Filter by position category ID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "min_wage",
                        "in": "query",
                        "description": "Minimum hourly wage in dollars",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "example": 15
                        }
                    },
                    {
                        "name": "max_wage",
                        "in": "query",
                        "description": "Maximum hourly wage in dollars",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "example": 50
                        }
                    },
                    {
                        "name": "currency",
                        "in": "query",
                        "description": "Currency code filter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "USD",
                            "example": "USD"
                        }
                    },
                    {
                        "name": "unionized",
                        "in": "query",
                        "description": "Filter by unionization status",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "example": true
                        }
                    },
                    {
                        "name": "tips_included",
                        "in": "query",
                        "description": "Filter by whether tips are included",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "example": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Global wage statistics including percentiles and breakdowns",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/WageStatistics"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/v1/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user account",
                "description": "Creates a new user account and returns authentication token",
                "operationId": "48e49e48019e8b141753cb515a26100b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "username",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "User's full name",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "description": "User's email address",
                                        "type": "string",
                                        "format": "email",
                                        "maxLength": 255,
                                        "example": "john.doe@example.com"
                                    },
                                    "username": {
                                        "description": "Unique username",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "johndoe"
                                    },
                                    "password": {
                                        "description": "User's password (minimum 8 characters)",
                                        "type": "string",
                                        "minLength": 8,
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "description": "Password confirmation",
                                        "type": "string",
                                        "example": "password123"
                                    },
                                    "phone": {
                                        "description": "User's phone number (optional)",
                                        "type": "string",
                                        "maxLength": 20,
                                        "example": "+1-555-123-4567"
                                    },
                                    "birthday": {
                                        "description": "User's birthday (optional)",
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-01-15"
                                    },
                                    "city": {
                                        "description": "User's city (optional)",
                                        "type": "string",
                                        "maxLength": 100,
                                        "example": "New York"
                                    },
                                    "state": {
                                        "description": "User's state (optional)",
                                        "type": "string",
                                        "maxLength": 100,
                                        "example": "NY"
                                    },
                                    "country": {
                                        "description": "User's country (optional)",
                                        "type": "string",
                                        "maxLength": 100,
                                        "example": "United States"
                                    },
                                    "zipcode": {
                                        "description": "User's zipcode (optional)",
                                        "type": "string",
                                        "maxLength": 20,
                                        "example": "10001"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "john.doe@example.com"
                                                        },
                                                        "username": {
                                                            "type": "string",
                                                            "example": "johndoe"
                                                        },
                                                        "role": {
                                                            "type": "string",
                                                            "enum": [
                                                                "admin",
                                                                "moderator",
                                                                "contributor",
                                                                "viewer"
                                                            ],
                                                            "example": "viewer"
                                                        },
                                                        "enabled": {
                                                            "type": "boolean",
                                                            "example": true
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "token": {
                                                    "type": "string",
                                                    "example": "1|abcdef123456789..."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email has already been taken."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Authenticate user and get access token",
                "description": "Validates user credentials and returns authentication token",
                "operationId": "5db09a35f965c6ca7529ed3c3cae8e21",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "User's email address",
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "description": "User's password",
                                        "type": "string",
                                        "example": "password123"
                                    },
                                    "device_name": {
                                        "description": "Device name for token identification (optional)",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "iPhone App"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "john.doe@example.com"
                                                        },
                                                        "username": {
                                                            "type": "string",
                                                            "example": "johndoe"
                                                        },
                                                        "role": {
                                                            "type": "string",
                                                            "enum": [
                                                                "admin",
                                                                "moderator",
                                                                "contributor",
                                                                "viewer"
                                                            ],
                                                            "example": "viewer"
                                                        },
                                                        "enabled": {
                                                            "type": "boolean",
                                                            "example": true
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "token": {
                                                    "type": "string",
                                                    "example": "1|abcdef123456789..."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Authentication failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The provided credentials are incorrect."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout and revoke access token",
                "description": "Revokes the current user's authentication token",
                "operationId": "8f1a443d39c3bf383f851fbb51253c64",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/auth/me": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get current user profile",
                "description": "Returns the authenticated user's profile information",
                "operationId": "1e5f382ba4fa0960d233875cab75a361",
                "responses": {
                    "200": {
                        "description": "User profile retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "john.doe@example.com"
                                                        },
                                                        "username": {
                                                            "type": "string",
                                                            "example": "johndoe"
                                                        },
                                                        "role": {
                                                            "type": "string",
                                                            "enum": [
                                                                "admin",
                                                                "moderator",
                                                                "contributor",
                                                                "viewer"
                                                            ],
                                                            "example": "viewer"
                                                        },
                                                        "enabled": {
                                                            "type": "boolean",
                                                            "example": true
                                                        },
                                                        "phone": {
                                                            "type": "string",
                                                            "example": "+1-555-123-4567",
                                                            "nullable": true
                                                        },
                                                        "birthday": {
                                                            "type": "string",
                                                            "format": "date",
                                                            "example": "1990-01-15",
                                                            "nullable": true
                                                        },
                                                        "city": {
                                                            "type": "string",
                                                            "example": "New York",
                                                            "nullable": true
                                                        },
                                                        "state": {
                                                            "type": "string",
                                                            "example": "NY",
                                                            "nullable": true
                                                        },
                                                        "country": {
                                                            "type": "string",
                                                            "example": "United States",
                                                            "nullable": true
                                                        },
                                                        "zipcode": {
                                                            "type": "string",
                                                            "example": "10001",
                                                            "nullable": true
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2024-01-15T10:30:00Z"
                                                        },
                                                        "updated_at": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2024-01-15T10:30:00Z"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/healthz": {
            "get": {
                "tags": [
                    "Health"
                ],
                "summary": "Basic health check",
                "description": "Returns basic API status",
                "operationId": "5866c56c5e94c9fa6af984def563c23d",
                "responses": {
                    "200": {
                        "description": "API is healthy",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/healthz/deep": {
            "get": {
                "tags": [
                    "Health"
                ],
                "summary": "Deep health check with database connectivity",
                "description": "Returns API status including database and PostGIS connectivity",
                "operationId": "e177f377b82d242425dcbc488109210f",
                "responses": {
                    "200": {
                        "description": "API and dependencies are healthy",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "database": {
                                            "type": "string",
                                            "example": "connected"
                                        },
                                        "postgis": {
                                            "type": "string",
                                            "example": "3.5 USE_GEOS=1 USE_PROJ=1 USE_STATS=1"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Health check failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Database connection failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Industry": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 120,
                        "example": "Fast Food Restaurant"
                    },
                    "slug": {
                        "type": "string",
                        "example": "fast-food-restaurant"
                    },
                    "depth": {
                        "type": "integer",
                        "maximum": 6,
                        "minimum": 0,
                        "example": 1
                    },
                    "sort": {
                        "type": "integer",
                        "example": 10
                    },
                    "parent": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 1
                            },
                            "name": {
                                "type": "string",
                                "example": "Restaurants"
                            },
                            "slug": {
                                "type": "string",
                                "example": "restaurants"
                            }
                        },
                        "type": "object",
                        "nullable": true
                    },
                    "breadcrumbs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Breadcrumb"
                        }
                    },
                    "children_count": {
                        "type": "integer",
                        "example": 3
                    }
                },
                "type": "object"
            },
            "IndustryNode": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Industry"
                    },
                    {
                        "properties": {
                            "children": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/IndustryNode"
                                }
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "Breadcrumb": {
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Restaurants"
                    },
                    "slug": {
                        "type": "string",
                        "example": "restaurants"
                    }
                },
                "type": "object"
            },
            "OrganizationListItem": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Starbucks"
                    },
                    "slug": {
                        "type": "string",
                        "example": "starbucks"
                    },
                    "domain": {
                        "type": "string",
                        "example": "starbucks.com"
                    },
                    "primary_industry": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 5
                            },
                            "name": {
                                "type": "string",
                                "example": "Coffee Shop"
                            },
                            "slug": {
                                "type": "string",
                                "example": "coffee-shop"
                            }
                        },
                        "type": "object",
                        "nullable": true
                    },
                    "locations_count": {
                        "type": "integer",
                        "example": 8450
                    },
                    "wage_reports_count": {
                        "type": "integer",
                        "example": 2341
                    },
                    "is_verified": {
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            },
            "Location": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Times Square Location"
                    },
                    "slug": {
                        "type": "string",
                        "example": "times-square-location"
                    },
                    "address_line_1": {
                        "type": "string",
                        "example": "1234 Main Street"
                    },
                    "address_line_2": {
                        "type": "string",
                        "example": "Suite 100",
                        "nullable": true
                    },
                    "city": {
                        "type": "string",
                        "example": "New York"
                    },
                    "state_province": {
                        "type": "string",
                        "example": "NY"
                    },
                    "postal_code": {
                        "type": "string",
                        "example": "10001"
                    },
                    "country_code": {
                        "type": "string",
                        "example": "US"
                    },
                    "phone": {
                        "type": "string",
                        "example": "+1-555-123-4567",
                        "nullable": true
                    },
                    "website_url": {
                        "type": "string",
                        "example": "https://example.com/location",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "example": "Flagship location in Times Square",
                        "nullable": true
                    },
                    "latitude": {
                        "type": "number",
                        "format": "float",
                        "example": 40.7128
                    },
                    "longitude": {
                        "type": "number",
                        "format": "float",
                        "example": -74.006
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "is_verified": {
                        "type": "boolean",
                        "example": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime",
                        "example": "2024-08-26T10:30:00Z"
                    },
                    "organization": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Organization"
                            }
                        ],
                        "nullable": true
                    },
                    "distance_meters": {
                        "description": "Distance in meters from search coordinates",
                        "type": "integer",
                        "example": 1500,
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Organization": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Starbucks Corporation"
                    },
                    "slug": {
                        "type": "string",
                        "example": "starbucks-corporation"
                    },
                    "domain": {
                        "type": "string",
                        "example": "starbucks.com",
                        "nullable": true
                    },
                    "locations_count": {
                        "type": "integer",
                        "example": 150
                    },
                    "wage_reports_count": {
                        "type": "integer",
                        "example": 42
                    },
                    "is_verified": {
                        "type": "boolean",
                        "example": true
                    },
                    "primary_industry": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 1
                            },
                            "name": {
                                "type": "string",
                                "example": "Food Service"
                            },
                            "slug": {
                                "type": "string",
                                "example": "food-service"
                            }
                        },
                        "type": "object",
                        "nullable": true
                    },
                    "legal_name": {
                        "type": "string",
                        "example": "Starbucks Corporation",
                        "nullable": true
                    },
                    "website_url": {
                        "type": "string",
                        "example": "https://www.starbucks.com",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "example": "Global coffeehouse chain",
                        "nullable": true
                    },
                    "logo_url": {
                        "type": "string",
                        "example": "https://example.com/logos/starbucks.png",
                        "nullable": true
                    },
                    "verified_at": {
                        "type": "string",
                        "format": "datetime",
                        "example": "2024-08-26T10:30:00Z",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime",
                        "example": "2024-08-26T10:30:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "datetime",
                        "example": "2024-08-26T10:30:00Z"
                    }
                },
                "type": "object"
            },
            "PositionCategory": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Barista"
                    },
                    "slug": {
                        "type": "string",
                        "example": "barista"
                    },
                    "description": {
                        "type": "string",
                        "example": "Prepares and serves coffee drinks",
                        "nullable": true
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "active",
                            "inactive"
                        ],
                        "example": "active"
                    },
                    "industry": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 1
                            },
                            "name": {
                                "type": "string",
                                "example": "Food Service"
                            },
                            "slug": {
                                "type": "string",
                                "example": "food-service"
                            }
                        },
                        "type": "object",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime",
                        "example": "2024-08-26T10:30:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "datetime",
                        "example": "2024-08-26T10:30:00Z"
                    }
                },
                "type": "object"
            },
            "WageReport": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "job_title": {
                        "type": "string"
                    },
                    "employment_type": {
                        "type": "string"
                    },
                    "employment_type_display": {
                        "type": "string"
                    },
                    "wage_period": {
                        "type": "string"
                    },
                    "wage_period_display": {
                        "type": "string"
                    },
                    "amount_cents": {
                        "type": "integer"
                    },
                    "normalized_hourly_cents": {
                        "type": "integer"
                    },
                    "currency": {
                        "type": "string"
                    },
                    "hours_per_week": {
                        "type": "integer",
                        "nullable": true
                    },
                    "effective_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "tips_included": {
                        "type": "boolean"
                    },
                    "unionized": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "datetime"
                    },
                    "location": {
                        "$ref": "#/components/schemas/Location"
                    },
                    "organization": {
                        "$ref": "#/components/schemas/Organization"
                    },
                    "position_category": {
                        "$ref": "#/components/schemas/PositionCategory"
                    },
                    "original_amount_money": {
                        "type": "string"
                    },
                    "normalized_hourly_money": {
                        "type": "string"
                    },
                    "distance_meters": {
                        "type": "integer",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "WageStatistics": {
                "properties": {
                    "count": {
                        "description": "Total number of wage reports",
                        "type": "integer"
                    },
                    "average_cents": {
                        "description": "Average normalized hourly wage in cents",
                        "type": "integer"
                    },
                    "median_cents": {
                        "description": "Median normalized hourly wage in cents",
                        "type": "integer"
                    },
                    "min_cents": {
                        "description": "Minimum normalized hourly wage in cents",
                        "type": "integer"
                    },
                    "max_cents": {
                        "description": "Maximum normalized hourly wage in cents",
                        "type": "integer"
                    },
                    "std_deviation_cents": {
                        "description": "Standard deviation in cents",
                        "type": "integer"
                    },
                    "percentiles": {
                        "properties": {
                            "p25": {
                                "description": "25th percentile in cents",
                                "type": "integer"
                            },
                            "p50": {
                                "description": "50th percentile (median) in cents",
                                "type": "integer"
                            },
                            "p75": {
                                "description": "75th percentile in cents",
                                "type": "integer"
                            },
                            "p90": {
                                "description": "90th percentile in cents",
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    },
                    "employment_types": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "type_display": {
                                    "type": "string"
                                },
                                "count": {
                                    "type": "integer"
                                },
                                "average_cents": {
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "job_titles": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "title": {
                                    "type": "string"
                                },
                                "count": {
                                    "type": "integer"
                                },
                                "average_cents": {
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "geographic_distribution": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "city": {
                                    "type": "string"
                                },
                                "state": {
                                    "type": "string"
                                },
                                "count": {
                                    "type": "integer"
                                },
                                "average_cents": {
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "display": {
                        "properties": {
                            "average": {
                                "description": "Formatted average wage",
                                "type": "string"
                            },
                            "median": {
                                "description": "Formatted median wage",
                                "type": "string"
                            },
                            "min": {
                                "description": "Formatted minimum wage",
                                "type": "string"
                            },
                            "max": {
                                "description": "Formatted maximum wage",
                                "type": "string"
                            },
                            "std_deviation": {
                                "description": "Formatted standard deviation",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "description": "User model",
                "properties": {
                    "id": {
                        "description": "User ID",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "description": "User's full name",
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "description": "User's email address",
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@example.com"
                    },
                    "username": {
                        "description": "User's username",
                        "type": "string",
                        "example": "johndoe"
                    },
                    "role": {
                        "description": "User role",
                        "type": "string",
                        "enum": [
                            "admin",
                            "moderator",
                            "contributor",
                            "viewer"
                        ],
                        "example": "viewer"
                    },
                    "enabled": {
                        "description": "Whether the user account is enabled",
                        "type": "boolean",
                        "example": true
                    },
                    "phone": {
                        "description": "User's phone number",
                        "type": "string",
                        "example": "+1-555-123-4567",
                        "nullable": true
                    },
                    "birthday": {
                        "description": "User's birthday",
                        "type": "string",
                        "format": "date",
                        "example": "1990-01-15",
                        "nullable": true
                    },
                    "city": {
                        "description": "User's city",
                        "type": "string",
                        "example": "New York",
                        "nullable": true
                    },
                    "state": {
                        "description": "User's state",
                        "type": "string",
                        "example": "NY",
                        "nullable": true
                    },
                    "country": {
                        "description": "User's country",
                        "type": "string",
                        "example": "United States",
                        "nullable": true
                    },
                    "zipcode": {
                        "description": "User's zipcode",
                        "type": "string",
                        "example": "10001",
                        "nullable": true
                    },
                    "created_at": {
                        "description": "Account creation timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-15T10:30:00Z"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-15T10:30:00Z"
                    }
                },
                "type": "object"
            },
            "UserPublic": {
                "title": "User (Public)",
                "description": "User model for public responses (excludes sensitive fields)",
                "properties": {
                    "id": {
                        "description": "User ID",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "description": "User's full name",
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "description": "User's email address",
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@example.com"
                    },
                    "username": {
                        "description": "User's username",
                        "type": "string",
                        "example": "johndoe"
                    },
                    "role": {
                        "description": "User role",
                        "type": "string",
                        "enum": [
                            "admin",
                            "moderator",
                            "contributor",
                            "viewer"
                        ],
                        "example": "viewer"
                    },
                    "enabled": {
                        "description": "Whether the user account is enabled",
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            },
            "AuthResponse": {
                "title": "Authentication Response",
                "description": "Authentication response with user data and token",
                "properties": {
                    "message": {
                        "description": "Response message",
                        "type": "string",
                        "example": "Login successful"
                    },
                    "data": {
                        "properties": {
                            "user": {
                                "$ref": "#/components/schemas/UserPublic"
                            },
                            "token": {
                                "description": "Authentication token",
                                "type": "string",
                                "example": "1|abcdef123456789..."
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ValidationError": {
                "title": "Validation Error",
                "description": "Standard validation error response",
                "properties": {
                    "message": {
                        "description": "Error message",
                        "type": "string",
                        "example": "The given data was invalid."
                    },
                    "errors": {
                        "description": "Field-specific validation errors",
                        "type": "object",
                        "example": {
                            "email": [
                                "The email has already been taken."
                            ]
                        },
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "property": null
                        }
                    }
                },
                "type": "object"
            },
            "ErrorResponse": {
                "title": "Error Response",
                "description": "Standard error response",
                "properties": {
                    "message": {
                        "description": "Error message",
                        "type": "string",
                        "example": "Unauthenticated."
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "apiKey",
                "description": "Enter token in format: Bearer {token}",
                "name": "Authorization",
                "in": "header"
            },
            "0": []
        }
    },
    "tags": [
        {
            "name": "Locations",
            "description": "Location management and wage statistics"
        },
        {
            "name": "Wage Reports",
            "description": "Anonymous wage report submissions and search"
        },
        {
            "name": "Authentication",
            "description": "User authentication and authorization endpoints"
        },
        {
            "name": "Health",
            "description": "API health check endpoints"
        },
        {
            "name": "Industries",
            "description": "Industries"
        },
        {
            "name": "Organizations",
            "description": "Organizations"
        },
        {
            "name": "Position Categories",
            "description": "Position Categories"
        }
    ]
}